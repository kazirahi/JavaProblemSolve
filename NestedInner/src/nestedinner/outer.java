package nestedinner;

class Outer { //একটা ক্লাস নেওয়া হইসে আউটার নামে। এই ক্লাসের ভিতরে যদি কোন ক্লাস থাকে তাহলে সেই ক্লাসটি হবে Outer ক্লাস এর ইনার ক্লাস।
	// ব্লগ {} চেক করে দেখবো যে Outer { ..... } ব্লগ এর মধ্যে কনো ক্লাস দিক্লেয়ার করা আছে কিনা। থাকলে টা ইনার ক্লাস।
	int outer_x = 100; // এইখানে একটা ইন্টিজার ভেরিয়েবল নেওয়া হইসে। যার ভেরিয়েবল এর নাম outer_x এখন এই ভেরিয়েবলে সরাসরি মান ১০০ এসাইন করে দিয়েছে।

	void test() { // একটা কন্সট্রাক্টর test  নামে নেওয়া হইসে।। যার টাইপ হচ্ছে void অর্থাৎ কোন কিছু রিটার্ন করবেনা।
		for (int i = 0; i < 5; i++) { // লুপ চালানো হইসে।
			class Inner { // এইখানে inner নামে একটা ক্লাস ক্রিয়েট করা হইসে। এখন এই ক্লাস টা Outer {....} ক্লাসের মধ্যে। তাহলে এটিই হচ্ছে ইনার ক্লাস। অর্থাৎ কোন ক্লাসের মধ্যে যদি অন্য কোন ক্লাস ক্রিয়েট করা হয় তাহলে টা হচ্ছে ইনার ক্লাস। সহজ কথা ক্লাসের ভিতরে ক্লাস। 
				void display() { // আরেকটা ফাংশন ক্রিয়েট করা হল এই নামে।
					System.out.println(outer_x); // এরপরে এর মধ্যে outer_x টা প্রিন্ট করতে বলা হচ্ছে। 
				}
			} // এই ব্লোগ } টা খেয়াল করলে বুজা যায় যে এইখানে ইনার ক্লাস টা শেষ। কিন্তু লুপ এর ব্লগ এখনো শেষ হয়নাই।
			Inner inner = new Inner();// এইখানে inner ক্লাস্টাকে দিয়ে একটা অবজেক্ট ক্রিয়েট করা হইসে।
			inner.display(); // এবং ওই অবজেক্ট এর মধ্যে display() ফাংশন টা কল করা হইসে। এখন display ফাংশনে যা নির্দেশ দেওয়া আছে এই লাইনে টা ই করা হবে। চেক করলে দেখা যায় যে এই ক্লাসে  outer_x প্রিন্ট করতে বলা হইসে। তো এর মধ্যে ১০০ এসাইন করা হইসে সো ১০০ প্রিন্ট করবে।
		} // এই } ব্লগটি দাঁরা লুপ শেষ বুজানো হচ্ছে। কিন্তু লুপ এর কন্ডিশন যা আছে ততক্ষন পর্যন্ত লুপ চলবে এবং inner.dispalay() কাজ করবে। মানে ১০০ প্রিন্ট করবে। লুপ যতক্ষন পর্যন্ত না ব্রেক হবে। 
	}//test() কন্সত্রাক্তর বা ফাংশন শেষ হল। 
}// Outer class শেষ হল।

// এরপরে Outer ক্লাস্টিকে মেইন ফাংশন এ কল করে দিবি। রেজাল্ট শো করবে। আমার এইখানে InnerClassDemo এইক্লাসে মেইন ফাংশন কল করা হইসে।
